// Generated by CoffeeScript 1.6.3
/*

  Grid Chart

  Data should be of the form:
  [
    {question: "Some Question"
     answers: [
      {id: 1, label: "Some Answer", value:2000}
      {id: 2, label: "Some Answer2", value:400}
      {id: 3, label: "Some Answer3", value:500}
     chosen: 2
  ]
*/


(function() {
  var defaults;

  if (window.pollChart == null) {
    window.pollChart = {};
  }

  defaults = {
    height: 60,
    margin: {
      top: 0,
      right: 0,
      bottom: 30,
      left: 0
    },
    colors: ["#FFF5E4", "#FF7E65", "#7DCDFC", "#4a9acd", "#3D444B"],
    data: []
  };

  window.pollChart.grid = function(opts) {
    var answer, answers, chart, colors, data, el, get, getter, height, helpers, index, item, margin, pollChart, tooltip, width, _i, _j, _len, _len1, _ref;
    pollChart = window.pollChart;
    helpers = pollChart.helpers;
    get = helpers.get;
    // tooltip = pollChart.tooltip;
    opts = _.defaults(opts, defaults);
    if (opts.width == null) {
      opts.width = d3.select(opts.el).node().offsetWidth;
    }
    margin = opts.margin, width = opts.width, height = opts.height;
    width = width - margin.left - margin.right;
    height = height - margin.top - margin.bottom;
    colors = opts.colors;
    data = [];
    _ref = opts.data;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      item = _ref[_i];
      answers = _.sortBy(item.answers, "value");
      for (index = _j = 0, _len1 = answers.length; _j < _len1; index = ++_j) {
        answer = answers[index];
        if (answer.id === item.chosen) {
          data.push({
            question: item.question,
            answer: answer.label,
            color: colors[index],
            question_id: item.question_id
          });
          break;
        }
      }
    }
    el = d3.select(opts.el);
    chart = el.selectAll(".gridSquare").data(data).enter().append("div").attr("class", "gridSquare").style("background", get("color"));
/*    getter = function(d) {
      return "Q. " + d.question + " <br />\nA. " + d.answer;
    };
    return tooltip(el, chart, getter);*/
  };

}).call(this);